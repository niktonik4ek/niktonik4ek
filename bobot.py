import telebot
import random
import os
import time
import datetime
import pytz
from gtts import gTTS

# –í–∞—à API —Ç–æ–∫–µ–Ω
API_TOKEN = "7062301942:AAGQ1yt4RICzqPoIBVzGvQ3N1EP70TjNZlY"
bot = telebot.TeleBot(API_TOKEN)

# –ò–º—è —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏ –±–∏–ª–µ—Ç–∞—Ö
DATA_FILE = 'currency_data.txt'
USERS_FILE = 'users.txt'
TICKETS_FILE = 'tickets_data.txt'

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_ID = '6490519873'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è TTS
is_tts_mode = {}
tts_activation_time = {}
selected_language = {}
selected_voice = {}

def load_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞."""
    data = {}
    if os.path.exists(DATA_FILE):
        with open(DATA_FILE, 'r') as f:
            for line in f:
                parts = line.strip().split('|')
                if len(parts) == 4:
                    user_id = parts[0].split(':')[1].strip()
                    username = parts[1].split(':')[1].strip()
                    amount = int(parts[2].split(':')[1].strip())
                    last_claim = float(parts[3].split(':')[1].strip())
                    data[user_id] = {
                        'username': username,
                        'amount': amount,
                        'last_claim': last_claim
                    }
    return data

def save_data(user_id, username, currency_amount, last_claim):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Ñ–∞–π–ª."""
    data = load_data()
    data[user_id] = {
        'username': username,
        'amount': currency_amount,
        'last_claim': last_claim
    }
    with open(DATA_FILE, 'w') as f:
        for uid, user_info in data.items():
            f.write(f'User ID: {uid} | Username: {user_info["username"]} | Amount: {user_info["amount"]} | Last Claim: {user_info["last_claim"]}\n')

def load_tickets():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –±–∏–ª–µ—Ç–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ñ–∞–π–ª–∞."""
    tickets = {}
    if os.path.exists(TICKETS_FILE):
        with open(TICKETS_FILE, 'r') as f:
            for line in f:
                parts = line.strip().split('|')
                if len(parts) == 2:
                    user_id = parts[0].split(':')[1].strip()
                    tickets_count = int(parts[1].split(':')[1].strip())
                    tickets[user_id] = tickets_count
    return tickets

def save_tickets(user_id, tickets_count):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –±–∏–ª–µ—Ç–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–∞–π–ª."""
    tickets = load_tickets()
    tickets[user_id] = tickets_count
    with open(TICKETS_FILE, 'w') as f:
        for uid, count in tickets.items():
            f.write(f'User ID: {uid} | Tickets: {count}\n')

def generate_random_emojis():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç—Ä–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–º–∞–π–ª–∞."""
    emojis = ['üòä', 'üòÇ', 'üòç', 'ü•∫', 'üòé', 'üò¢']
    return [random.choice(emojis) for _ in range(3)]

def check_slots(slots):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–º–∞–π–ª–∞ –≤ —Ä—è–¥."""
    return slots[0] == slots[1] == slots[2]

def find_user_id_by_username(username):
    """–ù–∞—Ö–æ–¥–∏—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É."""
    data = load_data()
    for user_id, user_info in data.items():
        if user_info['username'] == username:
            return user_id
    return None

@bot.message_handler(commands=['get_money'])
def get_currency(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã."""
    user_id = str(message.from_user.id)
    username = message.from_user.username

    # –ó–∞–≥—Ä—É–∑–∏–º –¥–∞–Ω–Ω—ã–µ
    data = load_data()
    current_time = time.time()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –¥–∞–Ω–Ω—ã—Ö
    if user_id in data:
        last_claim = data[user_id]['last_claim']

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ 10 —Å–µ–∫—É–Ω–¥ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è
        if current_time - last_claim < 10:
            remaining_time = 10 - (current_time - last_claim)
            bot.reply_to(message, f'–ü–æ–¥–æ–∂–¥–∏—Ç–µ {int(remaining_time)} —Å–µ–∫—É–Ω–¥(—ã) –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã.')
            return
    else:
        last_claim = 0

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π —Å—É–º–º—ã –≤–∞–ª—é—Ç—ã
    currency_amount = random.randint(1000, 10000)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Ñ–∞–π–ª
    save_data(user_id, username, currency_amount, current_time)

    bot.reply_to(message, f'–í—ã –ø–æ–ª—É—á–∏–ª–∏ {currency_amount} –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã!')

@bot.message_handler(commands=['spin'])
def spin(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∫—Ä—É—Ç–∏–ª–∫–∏ –∏ –≤—ã–¥–∞—á–∏ –±–∏–ª–µ—Ç–∞ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ –Ω–∞–ª–∏—á–∏—è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∞–ª—é—Ç—ã."""
    user_id = str(message.from_user.id)
    data = load_data()
    tickets = load_tickets()

    if user_id not in data:
        bot.reply_to(message, '–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ–º–∞–Ω–¥–æ–π /get_money.')
        return

    user_data = data[user_id]
    if user_data['amount'] < 100000:
        bot.reply_to(message, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–∞–ª—é—Ç—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã. –í–∞–º –Ω—É–∂–Ω–æ 100000 –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã.')
        return

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–º–∞–π–ª–æ–≤
    slots = generate_random_emojis()
    if check_slots(slots):
        # –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –±–∏–ª–µ—Ç–æ–≤
        user_tickets = tickets.get(user_id, 0) + 1
        save_tickets(user_id, user_tickets)

        # –£–º–µ–Ω—å—à–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –Ω–∞ 100000
        new_amount = user_data['amount'] - 100000
        save_data(user_id, user_data['username'], new_amount, user_data['last_claim'])
        bot.reply_to(message, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —É –≤–∞—Å —Ç—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–º–∞–π–ª–∞: {slots}. –í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ–¥–∏–Ω –±–∏–ª–µ—Ç–∏–∫. –£ –≤–∞—Å —Ç–µ–ø–µ—Ä—å {user_tickets} –±–∏–ª–µ—Ç–∏–∫–æ–≤. –í–∞—à –±–∞–ª–∞–Ω—Å: {new_amount} –≤–∞–ª—é—Ç—ã.')
    else:
        # –£–º–µ–Ω—å—à–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã –Ω–∞ 100000
        new_amount = user_data['amount'] - 100000
        save_data(user_id, user_data['username'], new_amount, user_data['last_claim'])
        bot.reply_to(message, f'–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å! –í—ã–ø–∞–ª–æ: {" | ".join(slots)}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. –í–∞—à –±–∞–ª–∞–Ω—Å: {new_amount} –≤–∞–ª—é—Ç—ã.')

@bot.message_handler(commands=['balance'])
def balance(message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤."""
    user_id = str(message.from_user.id)
    data = load_data()
    tickets = load_tickets()

    if user_id not in data:
        bot.reply_to(message, '–°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ–º–∞–Ω–¥–æ–π /get_money.')
        return

    user_data = data[user_id]
    user_tickets = tickets.get(user_id, 0)
    bot.reply_to(message, f'–í–∞—à –±–∞–ª–∞–Ω—Å: {user_data["amount"]} –≤–∞–ª—é—Ç—ã. –£ –≤–∞—Å {user_tickets} –±–∏–ª–µ—Ç–∏–∫–æ–≤.')

@bot.message_handler(commands=['show_all_users'])
def show_all_users(message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –±–∞–ª–∞–Ω—Å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    if str(message.from_user.id) != ADMIN_ID:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        return

    data = load_data()
    tickets = load_tickets()

    response = "–ë–∞–ª–∞–Ω—Å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n\n"
    for user_id, user_info in data.items():
        username = user_info['username']
        amount = user_info['amount']
        user_tickets = tickets.get(user_id, 0)
        response += f"User ID: {user_id} | Username: @{username} | –ë–∞–ª–∞–Ω—Å: {amount} | –ë–∏–ª–µ—Ç–∏–∫–æ–≤: {user_tickets}\n"

    bot.send_message(message.chat.id, response)

@bot.message_handler(commands=['showusers'])
def show_users(message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."""
    if str(message.from_user.id) != ADMIN_ID:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        return

    data = load_data()
    response = "–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—É—Å–∫–∞–ª–∏ –±–æ—Ç–∞:\n\n"
    for user_id, user_info in data.items():
        username = user_info['username']
        response += f"User ID: {user_id} | Username: @{username}\n"

    bot.send_message(message.chat.id, response)

@bot.message_handler(commands=['start'])
def handle_start(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ."""
    username = message.from_user.username
    full_name = message.from_user.full_name
    user_id = str(message.from_user.id)
    tz = pytz.timezone('Europe/Moscow')
    current_time = datetime.datetime.now(tz).strftime('%Y-%m-%d %H:%M:%S')

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥–∞–Ω–Ω—ã—Ö
    data = load_data()
    if user_id not in data:
        save_data(user_id, username, 0, 0)  # –ù–∞—á–∏–Ω–∞–µ–º —Å 0 –≤–∞–ª—é—Ç—ã –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è 0

    bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {full_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Ggamebelbot. –° –Ω–∏–º —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è, –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ –≥—Ä—É–ø–ø—É, –∏ —Ç–∞–º –º—ã —Ç–æ–∂–µ —Å–º–æ–∂–µ–º –ø–æ–æ–±—â–∞—Ç—Å—è :-)\n \n\n–í—Ä–µ–º—è (–ø–æ –º—Å–∫): {current_time}")

@bot.message_handler(commands=['help'])
def handle_help(message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É –æ –∫–æ–º–∞–Ω–¥–∞—Ö."""
    help_text = (
        "/get_money - –ü–æ–ª—É—á–∏—Ç—å –∏–≥—Ä–æ–≤—É—é –≤–∞–ª—é—Ç—É\n"
        "/spin - –ö—Ä—É—Ç–∏—Ç—å –±–∞—Ä–∞–±–∞–Ω –Ω–∞ —Å–º–∞–π–ª—ã\n"
        "/balance - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤\n"
        "/show_all_users - –ü–æ–∫–∞–∑–∞—Ç—å –±–∞–ª–∞–Ω—Å –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)\n"
        "/showusers - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø—É—Å–∫–∞–ª–∏ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)\n"
        "/transfer_currency <username> <amount> - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–∞–ª—é—Ç—É –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É\n"
        "/transfer_tickets <username> <amount> - –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –±–∏–ª–µ—Ç—ã –¥—Ä—É–≥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É\n"
        "/admin_give_currency <user_id> <amount> - –í—ã–¥–∞—Ç—å –≤–∞–ª—é—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ ID (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)\n"
        "/admin_give_tickets <user_id> <amount> - –í—ã–¥–∞—Ç—å –±–∏–ª–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ ID (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)\n"
        "/help - –í—ã–∑–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
    )
    bot.reply_to(message, help_text)

@bot.message_handler(commands=['tts'])
def tts(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TTS."""
    user_id = str(message.from_user.id)
    tickets = load_tickets()

    if user_id not in tickets or tickets[user_id] < 5:
        bot.reply_to(message, '–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è TTS –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å 5 –±–∏–ª–µ—Ç–æ–≤.')
        return

    current_time = time.time()
    if user_id in tts_activation_time:
        activation_time = tts_activation_time[user_id]
        if current_time - activation_time < 600:  # 10 –º–∏–Ω—É—Ç = 600 —Å–µ–∫—É–Ω–¥
            bot.reply_to(message, '–í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ —Ä–µ–∂–∏–º TTS. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 10 –º–∏–Ω—É—Ç, –ø—Ä–µ–∂–¥–µ —á–µ–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ —Å–Ω–æ–≤–∞.')
            return
        else:
            # –í—Ä–µ–º—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —É—Å—Ç–∞—Ä–µ–ª–æ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
            tts_activation_time[user_id] = current_time
    else:
        tts_activation_time[user_id] = current_time

    # –°–ø–∏—Å–∞–Ω–∏–µ –±–∏–ª–µ—Ç–æ–≤
    tickets[user_id] -= 5
    save_tickets(user_id, tickets[user_id])
    bot.reply_to(message, '–†–µ–∂–∏–º TTS –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç.')

@bot.message_handler(commands=['tts_on'])
def tts_on(message):
    """–í–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º TTS –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = str(message.from_user.id)
    if user_id in tts_activation_time and (time.time() - tts_activation_time[user_id]) < 600:
        is_tts_mode[user_id] = True
        bot.reply_to(message, "–†–µ–∂–∏–º TTS –≤–∫–ª—é—á–µ–Ω.")
    else:
        bot.reply_to(message, '–°–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ —Ä–µ–∂–∏–º TTS –∫–æ–º–∞–Ω–¥–æ–π /tts.')

@bot.message_handler(commands=['tts_off'])
def tts_off(message):
    """–í—ã–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º TTS –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = str(message.from_user.id)
    is_tts_mode[user_id] = False
    bot.reply_to(message, "–†–µ–∂–∏–º TTS –≤—ã–∫–ª—é—á–µ–Ω.")

@bot.message_handler(commands=['set_lang'])
def set_language(message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —è–∑—ã–∫ TTS –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = str(message.from_user.id)
    lang = message.text.split(' ', 1)[1].strip()  # –ü–æ–ª—É—á–∞–µ–º —è–∑—ã–∫ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    selected_language[user_id] = lang
    bot.reply_to(message, f"–Ø–∑—ã–∫ TTS —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {lang}.")

@bot.message_handler(commands=['set_voice'])
def set_voice(message):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥–æ–ª–æ—Å TTS –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = str(message.from_user.id)
    voice = message.text.split(' ', 1)[1].strip()  # –ü–æ–ª—É—á–∞–µ–º –≥–æ–ª–æ—Å –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    selected_voice[user_id] = voice
    bot.reply_to(message, f"–ì–æ–ª–æ—Å TTS —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {voice}.")

@bot.message_handler(commands=['transfer_currency'])
def transfer_currency(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–∞–ª—é—Ç—ã –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É."""
    user_id = str(message.from_user.id)
    parts = message.text.split()

    if len(parts) != 3:
        bot.reply_to(message, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /transfer_currency <username> <amount>')
        return

    target_username = parts[1]
    amount = int(parts[2])

    data = load_data()

    if user_id not in data:
        bot.reply_to(message, '–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ. –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏—Ç–µ –≤–∞–ª—é—Ç—É –∫–æ–º–∞–Ω–¥–æ–π /get_money.')
        return

    target_user_id = find_user_id_by_username(target_username)
    if not target_user_id:
        bot.reply_to(message, '–¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        return

    if data[user_id]['amount'] < amount:
        bot.reply_to(message, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–∞–ª—é—Ç—ã –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞.')
        return

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥
    data[user_id]['amount'] -= amount
    data[target_user_id]['amount'] += amount
    save_data(user_id, data[user_id]['username'], data[user_id]['amount'], data[user_id]['last_claim'])
    save_data(target_user_id, data[target_user_id]['username'], data[target_user_id]['amount'], data[target_user_id]['last_claim'])

    # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    bot.send_message(target_user_id, f'–í–∞–º –±—ã–ª–æ –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–æ {amount} –≤–∞–ª—é—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{data[user_id]["username"]}.')

    bot.reply_to(message, f'–í—ã –ø–µ—Ä–µ–≤–µ–ª–∏ {amount} –≤–∞–ª—é—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{target_username}.')

@bot.message_handler(commands=['admin_give_tickets'])
def admin_give_tickets(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–¥–∞—á–∏ –±–∏–ª–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ ID (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)."""
    if str(message.from_user.id) != ADMIN_ID:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        return

    parts = message.text.split()

    if len(parts) != 3:
        bot.reply_to(message, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /admin_give_tickets <user_id> <amount>')
        return

    target_user_id = parts[1]
    amount = int(parts[2])

    tickets = load_tickets()

    if target_user_id not in tickets:
        bot.reply_to(message, '–¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        return

    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã–¥–∞—á—É –±–∏–ª–µ—Ç–æ–≤
    tickets[target_user_id] += amount
    save_tickets(target_user_id, tickets[target_user_id])

    # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    data = load_data()
    target_username = data[target_user_id]['username']
    bot.send_message(target_user_id, f'–í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ {amount} –±–∏–ª–µ—Ç–æ–≤ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.')

    bot.reply_to(message, f'–í—ã –≤—ã–¥–∞–ª–∏ {amount} –±–∏–ª–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {target_user_id}.')

@bot.message_handler(commands=['admin_give_currency'])
def admin_give_currency(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –¥–ª—è –≤—ã–¥–∞—á–∏ –≤–∞–ª—é—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–æ ID (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É)."""
    if str(message.from_user.id) != ADMIN_ID:
        bot.reply_to(message, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.')
        return

    parts = message.text.split()

    if len(parts) != 3:
        bot.reply_to(message, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /admin_give_currency <user_id> <amount>')
        return

    target_user_id = parts[1]
    amount = int(parts[2])

    data = load_data()

    if target_user_id not in data:
        bot.reply_to(message, '–¶–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        return

    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—ã–¥–∞—á—É –≤–∞–ª—é—Ç—ã
    data[target_user_id]['amount'] += amount
    save_data(target_user_id, data[target_user_id]['username'], data[target_user_id]['amount'], data[target_user_id]['last_claim'])

    # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    target_username = data[target_user_id]['username']
    bot.send_message(target_user_id, f'–í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ {amount} –≤–∞–ª—é—Ç—ã –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.')

    bot.reply_to(message, f'–í—ã –≤—ã–¥–∞–ª–∏ {amount} –≤–∞–ª—é—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID {target_user_id}.')

@bot.message_handler(commands=['exchange'])
def exchange_ticket(message):
    user_id = str(message.from_user.id)

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏–∫–µ—Ç–æ–≤ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
        ticket_amount = int(message.text.split()[1])
    except (IndexError, ValueError):
        bot.reply_to(message, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∏–∫–µ—Ç–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: /exchange 3')
        return

    tickets = load_tickets()
    data = load_data()

    if user_id not in tickets:
        bot.reply_to(message, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.")
        return

    if tickets[user_id] < ticket_amount:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–∏–∫–µ—Ç–æ–≤ –¥–ª—è –æ–±–º–µ–Ω–∞.")
        return

    # –û–±–º–µ–Ω —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ –≤–∞–ª—é—Ç—É
    currency_amount = ticket_amount * 10000000  # 10 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –∑–∞ —Ç–∏–∫–µ—Ç
    tickets[user_id] -= ticket_amount

    if user_id in data:
        data[user_id]['amount'] += currency_amount
        save_data(user_id, data[user_id]['username'], data[user_id]['amount'], data[user_id]['last_claim'])
        save_tickets(user_id, tickets[user_id])
        bot.reply_to(message, f"–í—ã –æ–±–º–µ–Ω—è–ª–∏ {ticket_amount} —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ {currency_amount} –∏–≥—Ä–æ–≤–æ–π –≤–∞–ª—é—Ç—ã.")
    else:
        bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–º–µ–Ω–µ —Ç–∏–∫–µ—Ç–æ–≤.")


@bot.message_handler(func=lambda message: True)
def handle_text(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö —Å TTS."""
    user_id = str(message.from_user.id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ TTS –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ª–∏ —Ä–µ–∂–∏–º
    if is_tts_mode.get(user_id, False) and user_id in tts_activation_time and (time.time() - tts_activation_time[user_id]) < 600:
        lang = selected_language.get(user_id, 'ru')
        voice = selected_voice.get(user_id, 'female')  # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–∞ (–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)

        tts = gTTS(text=message.text, lang=lang)
        tts_file = f'{user_id}_message.mp3'
        tts.save(tts_file)

        with open(tts_file, 'rb') as audio_file:
            bot.send_audio(message.chat.id, audio_file)

        os.remove(tts_file)

bot.polling(none_stop=True)
